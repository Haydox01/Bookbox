// <auto-generated />
using System;
using Bookbox.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookbox.Migrations
{
    [DbContext(typeof(BookBoxDbContext))]
    [Migration("20240529220648_Added base class")]
    partial class Addedbaseclass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookbox.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2bb4edf-0d1d-4ce9-bb8e-4eaf9ff55cda"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2216),
                            Name = "Chinua Achebe",
                            Nationality = "Nigerian",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2217)
                        },
                        new
                        {
                            Id = new Guid("96be4f0e-0880-40ad-a837-76e1cd73ab6e"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2226),
                            Name = "Stephen Hawking",
                            Nationality = "British",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2227)
                        },
                        new
                        {
                            Id = new Guid("6a845b75-8595-4073-8160-8e52118de055"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2232),
                            Name = "Yuval Noah",
                            Nationality = "Israeli",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2232)
                        },
                        new
                        {
                            Id = new Guid("af2dbcf9-721a-4184-9267-7d1a8a277174"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2237),
                            Name = "Robert C Martin",
                            Nationality = "American",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2238)
                        });
                });

            modelBuilder.Entity("Bookbox.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("211891b1-80d9-46ec-84cb-c0e89bcede5a"),
                            AuthorId = new Guid("a2bb4edf-0d1d-4ce9-bb8e-4eaf9ff55cda"),
                            AuthorName = "Chinua Achebe",
                            CategoryId = new Guid("b10f6364-aebc-49ed-8ce5-343aed2b783d"),
                            CategoryName = "Fiction",
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2295),
                            ISBN = "978-3-16-148410-0",
                            Price = 1000.0,
                            Title = "Things Fall Apart",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2296)
                        },
                        new
                        {
                            Id = new Guid("c63b1c62-5ece-4aa8-b4ff-97dcf2908d9b"),
                            AuthorId = new Guid("6a845b75-8595-4073-8160-8e52118de055"),
                            AuthorName = "Yuval Noah",
                            CategoryId = new Guid("1555e61f-b2b7-4519-a7f4-93757881d682"),
                            CategoryName = "Science",
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2311),
                            ISBN = "978-3-16-148410-1",
                            Price = 1200.0,
                            Title = "Sapiens",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2312)
                        },
                        new
                        {
                            Id = new Guid("24da42a7-ef1f-4a90-bc18-ad1adbeedd76"),
                            AuthorId = new Guid("96be4f0e-0880-40ad-a837-76e1cd73ab6e"),
                            AuthorName = "Stephen Hawking",
                            CategoryId = new Guid("c42fd143-0c1f-4e10-8fb2-b420ae179282"),
                            CategoryName = "History",
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2322),
                            ISBN = "978-3-16-148410-2",
                            Price = 1500.0,
                            Title = "A Brief History of Time",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2323)
                        },
                        new
                        {
                            Id = new Guid("beba5dd7-504f-4edc-9e99-2ed8068dacf5"),
                            AuthorId = new Guid("af2dbcf9-721a-4184-9267-7d1a8a277174"),
                            AuthorName = "Robert C Martin",
                            CategoryId = new Guid("74fa4e60-3b0f-42db-bf16-35083dd4d108"),
                            CategoryName = "Programming",
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2331),
                            ISBN = "978-3-16-148410-3",
                            Price = 2000.0,
                            Title = "Clean Code",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2332)
                        });
                });

            modelBuilder.Entity("Bookbox.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b10f6364-aebc-49ed-8ce5-343aed2b783d"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1809),
                            Description = "Fiction books",
                            Name = "Fiction",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1817)
                        },
                        new
                        {
                            Id = new Guid("c42fd143-0c1f-4e10-8fb2-b420ae179282"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1847),
                            Description = "History books",
                            Name = "History",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1848)
                        },
                        new
                        {
                            Id = new Guid("1555e61f-b2b7-4519-a7f4-93757881d682"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1854),
                            Description = "Science books",
                            Name = "Science",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1855)
                        },
                        new
                        {
                            Id = new Guid("74fa4e60-3b0f-42db-bf16-35083dd4d108"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1860),
                            Description = "Programming books",
                            Name = "Programming",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(1861)
                        });
                });

            modelBuilder.Entity("Bookbox.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5dba7a38-a3bb-426c-8783-bd94e6f3ed91"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2396),
                            FirstName = "John",
                            LastName = "Doe",
                            ShippingAddress = "123 Main St, Lagos",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2397)
                        },
                        new
                        {
                            Id = new Guid("db6d528f-24fb-4c71-b111-5c75f001028e"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2404),
                            FirstName = "Jane",
                            LastName = "Smith",
                            ShippingAddress = "123 Main St, UK",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2405)
                        },
                        new
                        {
                            Id = new Guid("43d1b3c1-f27e-4b89-ad15-92de0f73507f"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2410),
                            FirstName = "Tunde",
                            LastName = "Akinkunmi",
                            ShippingAddress = "123 Main St, Ibadan",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2411)
                        },
                        new
                        {
                            Id = new Guid("030dc7da-1017-4042-9d69-bd645339d425"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2416),
                            FirstName = "Kim",
                            LastName = "Yun",
                            ShippingAddress = "123 Main St, North Korea",
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2417)
                        });
                });

            modelBuilder.Entity("Bookbox.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("200b0e05-980f-468c-835b-55f0481d03ae"),
                            BookId = new Guid("211891b1-80d9-46ec-84cb-c0e89bcede5a"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2479),
                            CustomerId = new Guid("5dba7a38-a3bb-426c-8783-bd94e6f3ed91"),
                            CustomerName = "John Doe",
                            OrderDate = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2477),
                            ShippingAddress = "123 Main St, Lagos",
                            TotalAmount = 1000.0,
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2479)
                        },
                        new
                        {
                            Id = new Guid("6dd829f1-cc00-4581-b09b-e9ce5e14b656"),
                            BookId = new Guid("c63b1c62-5ece-4aa8-b4ff-97dcf2908d9b"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2493),
                            CustomerId = new Guid("db6d528f-24fb-4c71-b111-5c75f001028e"),
                            CustomerName = "Jane Smith",
                            OrderDate = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2492),
                            ShippingAddress = "123 Main St, UK",
                            TotalAmount = 1200.0,
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2494)
                        },
                        new
                        {
                            Id = new Guid("4f6f9661-2468-4988-86a4-2bbdb8656a68"),
                            BookId = new Guid("24da42a7-ef1f-4a90-bc18-ad1adbeedd76"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2506),
                            CustomerId = new Guid("43d1b3c1-f27e-4b89-ad15-92de0f73507f"),
                            CustomerName = "Tunde Akinkunmi",
                            OrderDate = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2505),
                            ShippingAddress = "123 Main St, Ibadan",
                            TotalAmount = 1500.0,
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2507)
                        },
                        new
                        {
                            Id = new Guid("64f7e1df-0267-4426-ae90-a48871ae967b"),
                            BookId = new Guid("beba5dd7-504f-4edc-9e99-2ed8068dacf5"),
                            CreatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2515),
                            CustomerId = new Guid("030dc7da-1017-4042-9d69-bd645339d425"),
                            CustomerName = "Kim Yun",
                            OrderDate = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2515),
                            ShippingAddress = "123 Main St, North Korea",
                            TotalAmount = 2000.0,
                            UpdatedAt = new DateTime(2024, 5, 29, 22, 6, 46, 881, DateTimeKind.Utc).AddTicks(2516)
                        });
                });

            modelBuilder.Entity("Bookbox.Models.Book", b =>
                {
                    b.HasOne("Bookbox.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookbox.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Bookbox.Models.Order", b =>
                {
                    b.HasOne("Bookbox.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookbox.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
